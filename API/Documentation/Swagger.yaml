swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Character HP API"
tags:
- name: "character"
schemes:
- "http"
paths:
  /characters:
    get:
      tags:
      - "character"
      summary: "get all characters"
      operationId: "getCharacters"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Character"
        "204":
          description: "No Content"
          schema:
            $ref: "#/definitions/ApiResponse"  
        "500":
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
    post:
      tags:
      - "character"
      summary: "Create a character"
      operationId: "createCharacter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Character object to be created"
        required: true
        schema:
          $ref: "#/definitions/CreateCharacterRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Character"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
  /characters/{characterId}:
    get:
      tags:
      - "character"
      summary: "get a character by ID"
      operationId: "getCharacter"
      produces:
      - "application/json"
      parameters:
      - name: "characterId"
        in: "path"
        description: "ID of character to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Character"
        "404":
          description: "Character not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
  /characters/{characterId}/hp:
    get:
      tags:
      - "character"
      summary: "get character HP"
      operationId: "getCharacterHp"
      produces:
      - "application/json"
      parameters:
      - name: "characterId"
        in: "path"
        description: "ID of character's HP to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CharacterHp"
        "404":
          description: "Character not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
    post:
      tags:
      - "character"
      summary: "apply a change to character HP (healing, damage, etc.)"
      operationId: "updateCharacterHp"
      produces:
      - "application/json"
      parameters:
      - name: "characterId"
        in: "path"
        description: "ID of character's HP to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "Request to update Character's hp"
        required: true
        schema:
          $ref: "#/definitions/UpdateHpRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CharacterHp"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Character not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
    put:
      tags:
      - "character"
      summary: "set a character's HP to the specified value"
      operationId: "setCharacterHp"
      produces:
      - "application/json"
      parameters:
      - name: "characterId"
        in: "path"
        description: "ID of character's HP to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "Request to update Character's hp"
        required: true
        schema:
          $ref: "#/definitions/SetHpRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CharacterHp"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Character not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
  /characters/{characterId}/hp/updateTemp:
    put:
      tags:
      - "character"
      summary: "set a character's Temp HP to the specified value"
      operationId: "setCharacterTempHp"
      produces:
      - "application/json"
      parameters:
      - name: "characterId"
        in: "path"
        description: "ID of character's HP to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "Request to update Character's Temp hp"
        required: true
        schema:
          $ref: "#/definitions/SetTempHpRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CharacterHp"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Character not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"

definitions:
  Character:
    type: "object"
    properties:
      id:
        type: "string"
        example: "VlgUNaf-Q"
      name:
        type: "string"
        example: "Briv"
      level:
        type: "integer"
        format: "int64"
        example: 5
      hp:
        type: "integer"
        format: "int64"
        example: 23
      maxhp:
        type: "integer"
        format: "int64"
        example: 23
      tempHp:
        type: "integer"
        format: "int64"
        example: 0
      classes:
        type: "array"
        items:
          $ref: "#/definitions/CharacterClass"
      stats: 
        $ref: "#/definitions/CharacterAttributes"
      items:
        type: "array"
        items: 
          $ref: "#/definitions/CharacterItem"
      defenses:
        type: "array"
        items: 
          $ref: "#/definitions/CharacterDefense"
  CreateCharacterRequest:
    type: "object"
    required:
      - name
      - level
      - classes
      - stats
    properties:
      name:
        type: "string"
        example: "Briv"
      level:
        type: "integer"
        format: "int64"
        example: 5
      classes:
        type: "array"
        items:
          $ref: "#/definitions/CharacterClass"
      stats: 
        $ref: "#/definitions/CharacterAttributes"
      items:
        type: "array"
        items: 
          $ref: "#/definitions/CharacterItem"
      defenses:
        type: "array"
        items: 
          $ref: "#/definitions/CharacterDefense"
  CharacterClass:
    type: "object"
    required:
      - name
      - hitDiceValue
      - classLevel
    properties:
      name:
        type: "string"
        example: "fighter"
      hitDiceValue:
        type: "integer"
        format: "int64"
        example: 10
      classLevel:
        type: "integer"
        format: "int64"
        example: 3
  CharacterAttributes:
    type: "object"
    required:
        - strength
        - dexterity
        - constitution
        - intelligence
        - wisdom
        - charisma
    properties:
      strength:
        type: "integer"
        format: "int64"
        example: 15          
      dexterity:
        type: "integer"
        format: "int64"
        example: 12          
      constitution:
        type: "integer"
        format: "int64"
        example: 14          
      intelligence:
        type: "integer"
        format: "int64"
        example: 13          
      wisdom:
        type: "integer"
        format: "int64"
        example: 10          
      charisma:
        type: "integer"
        format: "int64"
        example: 8          
  CharacterItem:
    type: "object"
    required:
      - name
      - modifier
    properties:
      name:
        type: "string"
        example: "Ioun Stone of Fortitude"
      modifier:
        type: "object"
        required:
        - affectedObject
        - affectedValue
        - value
        properties:
          affectedObject:
            type: "string"
            example: "stats"
          affectedValue:
            type: "string"
            example: "constitution"
          value:
            type: "integer"
            format: "int64"
            example: 2 
  CharacterDefense:
    type: "object"
    required:
      - type
      - defense
    properties:
      type:
        type: "string"
        example: "fire"
      defense:
        type: "string"
        example: "immunity"
  CharacterHp:
    type: "object"
    properties:
      id:
        type: "string"
        example: "VlgUNaf-Q"
      hp:
        type: "integer"
        format: "int64"
        example: 23
      maxHp:
        type: "integer"
        format: "int64"
        example: 23
      tempHp:
        type: "integer"
        format: "int64"
        example: 0
  UpdateHpRequest:
    type: "object"
    required:
      - type
      - value
    properties:
      type:
        type: "string"
        example: "healing"
      value:
        type: "integer"
        format: "int64"
        example: 5
  SetHpRequest:
    type: "object"
    required:
      - value
    properties:
      value:
        type: "integer"
        format: "int64"
        example: 23
  SetTempHpRequest:
    type: "object"
    required:
      - value
      - override
    properties:
      value:
        type: "integer"
        format: "int64"
        example: 5
      override:
        type: "boolean"
        description: "overrides default temp hp behavior (retains current value exceeds request)"
        example: false
  ApiResponse:
    type: "object"
    properties:
      message:
        type: "string"
        example: "Error message."